@using System;
@inject Blazored.LocalStorage.ILocalStorageService StateContainer

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Alpaki.WebApp</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            @for (var i = -3; i < 3; i++)
            {
                var month = DateTime.Now.AddMonths(i);
                <NavLink class="nav-link" href="@($"/time-sheet/{month.Year}/{month.Month}")">
                    <span class="oi oi-calendar" aria-hidden="true"></span> (@month.Year/@month.ToString("MMM"))
                </NavLink>
            }
            @if (!IsAuthorized)
            {
                <NavLink class="nav-link" href="/authorize/login">
                    <span class="oi oi-person" aria-hidden="true"></span> Log In
                </NavLink>
            }
            else
            {
                <NavLink class="nav-link" @onclick="LogOut">
                    <span class="oi oi-delete" aria-hidden="true"></span> Log Out
                </NavLink>
            }
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool IsAuthorized { get; set; }
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        IsAuthorized = !string.IsNullOrEmpty(await StateContainer.GetItemAsync<string>("bearer_token"));

        StateContainer.Changed += async (e, c) =>
        {
            IsAuthorized = !string.IsNullOrEmpty(await StateContainer.GetItemAsync<string>("bearer_token"));

        };

        await base.OnAfterRenderAsync(firstRender);
    }

    async Task LogOut()
    {
        await StateContainer.RemoveItemAsync("bearer_token");
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
